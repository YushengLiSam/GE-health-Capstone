{"ast":null,"code":"var _jsxFileName = \"/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/UserInterface/TabNavigation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Forms from './forms/Forms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabNavigation({\n  selectedStage\n}) {\n  _s();\n  const [activeKey, setActiveKey] = useState(''); // Controls the active tab\n  const [tabsData, setTabsData] = useState([{\n    \"name\": \"Contractions\",\n    \"datapoints\": [{\n      \"name\": \"Contraction frequency\",\n      \"datatype\": \"Numeric\",\n      \"inputType\": \"Textbox\",\n      \"isMandatory\": true\n    }, {\n      \"name\": \"Quality\",\n      \"datatype\": \"List\",\n      \"inputType\": \"Dropdown\",\n      \"isMandatory\": false,\n      \"listItems\": [\"Mild\", \"Moderate\", \"Strong\"]\n    }]\n  }, {\n    \"name\": \"Patient Care\",\n    \"datapoints\": [{\n      \"name\": \"Name\",\n      \"datatype\": \"String\",\n      \"inputType\": \"Textbox\",\n      \"isMandatory\": false\n    }]\n  }]);\n  const fetchFormData = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/categories`, {\n        method: 'POST',\n        // Adjust to POST if the server requires stage in the request body\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          stage: selectedStage\n        }) // Send stage in the request body\n      });\n      const data = await response.json();\n      setTabsData(data);\n      if (data.length > 0) setActiveKey(data[0].name);\n    } catch (error) {\n      console.error(\"Error fetching form data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (selectedStage) {\n      fetchFormData();\n    }\n  }, [selectedStage]);\n  console.log(selectedStage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-navigation\",\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      id: \"horizontal-tab-example\",\n      activeKey: activeKey,\n      onSelect: k => setActiveKey(k) // Updates the active tab state\n      ,\n      className: \"horizontal-tabs\",\n      children: tabsData.map((tab, index) => /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: tab.name,\n        title: tab.name,\n        children: activeKey === tab.name && /*#__PURE__*/_jsxDEV(Forms, {\n          datapoints: tab.datapoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(TabNavigation, \"p04mXNk4FbCtEjT0GkMh7oAejz8=\");\n_c = TabNavigation;\nexport default TabNavigation;\nvar _c;\n$RefreshReg$(_c, \"TabNavigation\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Tab","Forms","jsxDEV","_jsxDEV","TabNavigation","selectedStage","_s","activeKey","setActiveKey","tabsData","setTabsData","fetchFormData","response","fetch","method","headers","body","JSON","stringify","stage","data","json","length","name","error","console","log","className","children","id","onSelect","k","map","tab","index","eventKey","title","datapoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/UserInterface/TabNavigation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Forms from './forms/Forms';\n\nfunction TabNavigation({ selectedStage }) {\n  const [activeKey, setActiveKey] = useState(''); // Controls the active tab\n  const [tabsData, setTabsData] = useState([{\n    \"name\": \"Contractions\",\n    \"datapoints\": [\n      {\n        \"name\": \"Contraction frequency\",\n        \"datatype\": \"Numeric\",\n        \"inputType\": \"Textbox\",\n        \"isMandatory\": true\n      },\n      {\n        \"name\": \"Quality\",\n        \"datatype\": \"List\",\n        \"inputType\": \"Dropdown\",\n        \"isMandatory\": false,\n        \"listItems\": [\"Mild\", \"Moderate\", \"Strong\"]\n      }\n    ]\n  },\n  {\n    \"name\": \"Patient Care\",\n    \"datapoints\": [\n      {\n        \"name\": \"Name\",\n        \"datatype\": \"String\",\n        \"inputType\": \"Textbox\",\n        \"isMandatory\": false\n      }\n    ]\n  }]);\n   const fetchFormData = async () => {\n     try {\n       const response = await fetch(`http://127.0.0.1:5000/api/categories`, {\n         method: 'POST', // Adjust to POST if the server requires stage in the request body\n         headers: {\n           'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({ stage: selectedStage }) // Send stage in the request body\n       });\n       const data = await response.json();\n       setTabsData(data);\n       if (data.length > 0) setActiveKey(data[0].name);\n     } catch (error) {\n       console.error(\"Error fetching form data:\", error);\n     }\n   };\n   useEffect(() => {\n     if (selectedStage) {\n       fetchFormData();\n     }\n   }, [selectedStage]);\n  \n  console.log(selectedStage);\n  return (\n    <div className=\"tab-navigation\">\n      <Tabs\n        id=\"horizontal-tab-example\"\n        activeKey={activeKey}\n        onSelect={(k) => setActiveKey(k)} // Updates the active tab state\n        className=\"horizontal-tabs\"\n      >\n        {tabsData.map((tab, index) => (\n          <Tab eventKey={tab.name} title={tab.name} key={index}>\n            {activeKey === tab.name && (\n                <Forms datapoints={tab.datapoints} />\n            )}\n          </Tab>\n        ))}\n      </Tabs>\n    </div>\n  );\n}\n\nexport default TabNavigation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC;IACxC,MAAM,EAAE,cAAc;IACtB,YAAY,EAAE,CACZ;MACE,MAAM,EAAE,uBAAuB;MAC/B,UAAU,EAAE,SAAS;MACrB,WAAW,EAAE,SAAS;MACtB,aAAa,EAAE;IACjB,CAAC,EACD;MACE,MAAM,EAAE,SAAS;MACjB,UAAU,EAAE,MAAM;MAClB,WAAW,EAAE,UAAU;MACvB,aAAa,EAAE,KAAK;MACpB,WAAW,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ;IAC5C,CAAC;EAEL,CAAC,EACD;IACE,MAAM,EAAE,cAAc;IACtB,YAAY,EAAE,CACZ;MACE,MAAM,EAAE,MAAM;MACd,UAAU,EAAE,QAAQ;MACpB,WAAW,EAAE,SAAS;MACtB,aAAa,EAAE;IACjB,CAAC;EAEL,CAAC,CAAC,CAAC;EACF,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEd;QAAc,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,WAAW,CAACU,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAEd,YAAY,CAACY,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EACD1B,SAAS,CAAC,MAAM;IACd,IAAIO,aAAa,EAAE;MACjBM,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACN,aAAa,CAAC,CAAC;EAEpBoB,OAAO,CAACC,GAAG,CAACrB,aAAa,CAAC;EAC1B,oBACEF,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BzB,OAAA,CAACJ,IAAI;MACH8B,EAAE,EAAC,wBAAwB;MAC3BtB,SAAS,EAAEA,SAAU;MACrBuB,QAAQ,EAAGC,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAAE,CAAC;MAAA;MAClCJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAE1BnB,QAAQ,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB/B,OAAA,CAACH,GAAG;QAACmC,QAAQ,EAAEF,GAAG,CAACV,IAAK;QAACa,KAAK,EAAEH,GAAG,CAACV,IAAK;QAAAK,QAAA,EACtCrB,SAAS,KAAK0B,GAAG,CAACV,IAAI,iBACnBpB,OAAA,CAACF,KAAK;UAACoC,UAAU,EAAEJ,GAAG,CAACI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvC,GAH4CP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI/C,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CAxEQF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA0EtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}