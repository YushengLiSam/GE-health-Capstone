{"ast":null,"code":"var _jsxFileName = \"/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/builder/AnnotationBuilder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styles from './AnnotationBuilder.module.css'; // Import the CSS module\nimport EditableDropdown from './EditableDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnnotationBuilder() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const fileInputRef = useRef(null); // Reference for the hidden file input\n\n  const categoryOptions = ['Pre-Admission', 'Early Labor', 'Active Labor', 'Transition', 'Pushing/Delivery', 'Expulsion of Placenta'];\n  const subcategoryOptions = ['Patient interventions', 'FHR', 'Contractions', 'Blood work', 'I/O Interventions', 'Medication Administration', 'Pain Management', 'Membrane Status', 'Fetal Position', 'Epidural Placement', 'Vitals', 'Delivery time of infant', 'Time of delivery of Placenta', 'Estimated Blood Loss (EBL)', 'Blood type', 'Reason for Admission'];\n  const datapointOptions = [{\n    name: 'HR',\n    type: 'Float'\n  }, {\n    name: 'B/p',\n    type: 'String'\n  }, {\n    name: 'Respirations',\n    type: 'String'\n  }, {\n    name: 'SpO2',\n    type: 'Float'\n  }, {\n    name: 'Temp',\n    type: 'Float'\n  }, {\n    name: 'Pulse Ox',\n    type: 'String'\n  }, {\n    name: 'Dilation',\n    type: 'Float'\n  }, {\n    name: 'Monitor Mode',\n    type: 'List',\n    listItems: ['External US', 'Internal Scalp Electrode', 'Auscultation', 'Fetoscope', 'Doppler', 'Telemetry']\n  }];\n  const dataTypeOptions = ['Float', 'String', 'List'];\n  const handleImportData = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const importedData = JSON.parse(e.target.result);\n          if (importedData.categories) {\n            const formattedCategories = importedData.categories.map(category => {\n              const selectedCategory = categoryOptions.includes(category.name.trim()) ? category.name.trim() : 'Other';\n              const customCategory = selectedCategory === 'Other' ? category.name.trim() : '';\n              return {\n                selectedCategory,\n                customCategory,\n                subcategories: category.subcategories.map(subcategory => {\n                  const selectedSubcategory = subcategoryOptions.includes(subcategory.name.trim()) ? subcategory.name.trim() : 'Other';\n                  const customSubcategory = selectedSubcategory === 'Other' ? subcategory.name.trim() : '';\n                  return {\n                    selectedSubcategory,\n                    customSubcategory,\n                    datapoints: subcategory.datapoints.map(datapoint => {\n                      const selectedDatapoint = datapointOptions.some(dp => dp.name === datapoint.name.trim()) ? datapoint.name.trim() : 'Other';\n                      const customDatapoint = selectedDatapoint === 'Other' ? datapoint.name.trim() : '';\n                      const dataType = datapoint.datatype;\n                      const isMandatory = datapoint.isMandatory || false;\n                      const listItems = datapoint.listItems || [];\n                      return {\n                        selectedDatapoint,\n                        customDatapoint,\n                        type: dataType,\n                        isMandatory,\n                        listItems\n                      };\n                    })\n                  };\n                })\n              };\n            });\n            setCategories(formattedCategories);\n          } else {\n            alert(\"Invalid format: Missing 'categories' field\");\n          }\n        } catch (error) {\n          alert(\"Error parsing JSON file\");\n        }\n        event.target.value = null;\n      };\n      reader.readAsText(file);\n    }\n  };\n  const triggerFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click(); // Programmatically click the file input\n    }\n  };\n  const exportData = () => {\n    // Format the current state data into the JSON structure\n    const dataToExport = {\n      categories: categories.map(category => ({\n        name: category.selectedCategory === 'Other' ? category.customCategory : category.selectedCategory,\n        subcategories: category.subcategories.map(subcategory => ({\n          name: subcategory.selectedSubcategory === 'Other' ? subcategory.customSubcategory : subcategory.selectedSubcategory,\n          datapoints: subcategory.datapoints.map(datapoint => ({\n            name: datapoint.selectedDatapoint === 'Other' ? datapoint.customDatapoint : datapoint.selectedDatapoint,\n            datatype: datapoint.type,\n            inputType: datapoint.inputType || 'Textbox',\n            // Default to 'Textbox' if no inputType is specified\n            isMandatory: datapoint.isMandatory,\n            listItems: datapoint.listItems || []\n          }))\n        }))\n      }))\n    };\n\n    // Convert the data to a JSON string\n    const json = JSON.stringify(dataToExport, null, 2); // Pretty-print with 2-space indentation\n\n    // Create a blob from the JSON and a download link\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element to download the file\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'annotation_data.json'; // Default file name\n    link.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  const handleCustomCategoryChange = (categoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].customCategory = value;\n    setCategories(updatedCategories);\n  };\n  const handleCustomSubcategoryChange = (categoryIndex, subcategoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].customSubcategory = value;\n    setCategories(updatedCategories);\n  };\n  const handleCustomDatapointChange = (categoryIndex, subcategoryIndex, datapointIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].customDatapoint = value;\n    setCategories(updatedCategories);\n  };\n  const addCategory = () => {\n    setCategories([...categories, {\n      selectedCategory: '',\n      subcategories: []\n    }]);\n  };\n  const removeCategory = categoryIndex => {\n    setCategories(categories.filter((_, index) => index !== categoryIndex));\n  };\n  const addSubcategory = categoryIndex => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories.push({\n      selectedSubcategory: '',\n      datapoints: []\n    });\n    setCategories(updatedCategories);\n  };\n  const removeSubcategory = (categoryIndex, subcategoryIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories = updatedCategories[categoryIndex].subcategories.filter((_, index) => index !== subcategoryIndex);\n    setCategories(updatedCategories);\n  };\n  const handleCategoryChange = (categoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].selectedCategory = value;\n    setCategories(updatedCategories);\n  };\n  const handleSubcategoryChange = (categoryIndex, subcategoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].selectedSubcategory = value;\n    setCategories(updatedCategories);\n  };\n  const addDatapoint = (categoryIndex, subcategoryIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints.push({\n      selectedDatapoint: '',\n      type: '',\n      listItems: []\n    });\n    setCategories(updatedCategories);\n  };\n  const removeDatapoint = (categoryIndex, subcategoryIndex, datapointIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints = updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints.filter((_, index) => index !== datapointIndex);\n    setCategories(updatedCategories);\n  };\n  const handleDatapointChange = (categoryIndex, subcategoryIndex, datapointIndex, event) => {\n    const updatedCategories = [...categories];\n    const selectedDatapoint = datapointOptions.find(option => option.name === event.target.value);\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex] = {\n      selectedDatapoint: selectedDatapoint.name,\n      type: selectedDatapoint.type,\n      listItems: selectedDatapoint.listItems || []\n    };\n    setCategories(updatedCategories);\n  };\n  const handleDataTypeChange = (categoryIndex, subcategoryIndex, datapointIndex, event) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].type = event.target.value;\n    setCategories(updatedCategories);\n  };\n  const handleMandatoryChange = (categoryIndex, subcategoryIndex, datapointIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].isMandatory = !updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].isMandatory;\n    setCategories(updatedCategories);\n  };\n  const handleSave = async () => {\n    const formattedData = categories.map(category => ({\n      name: category.selectedCategory === 'Other' ? category.customCategory : category.selectedCategory,\n      subcategories: category.subcategories.map(subcategory => ({\n        name: subcategory.selectedSubcategory === 'Other' ? subcategory.customSubcategory : subcategory.selectedSubcategory,\n        datapoints: subcategory.datapoints.map(datapoint => ({\n          name: datapoint.selectedDatapoint === 'Other' ? datapoint.customDatapoint : datapoint.selectedDatapoint,\n          datatype: datapoint.type,\n          inputType: datapoint.inputType || 'Textbox',\n          isMandatory: datapoint.isMandatory || false,\n          listItems: datapoint.listItems || []\n        }))\n      }))\n    }));\n    try {\n      const response = await fetch('PLACEHOLDER', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          categories: formattedData\n        })\n      });\n      if (response.ok) {\n        alert(\"Data saved successfully!\");\n      } else {\n        console.log(\"status code is:\", response.status);\n        alert(\"Failed to save data. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n      alert(\"An error occurred while saving data.\");\n    }\n  };\n\n  // Handler for the Cancel button\n  const handleCancel = () => {\n    // Reset categories to an empty array\n    setCategories([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['annotation-builder'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Annotation Builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['export-import-buttons'],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles['export-button'],\n          onClick: exportData,\n          children: \"Export Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles['import-button'],\n          onClick: triggerFileInput,\n          children: \"Import Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/json\",\n          onChange: handleImportData,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCategory,\n      className: styles['add-category'],\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categories.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.category,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.categoryRow,\n          children: [/*#__PURE__*/_jsxDEV(EditableDropdown, {\n            options: categoryOptions,\n            value: category.selectedCategory,\n            onChange: value => handleCategoryChange(categoryIndex, value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), category.selectedCategory === 'Other' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: category.customCategory,\n            onChange: e => handleCustomCategoryChange(categoryIndex, e.target.value),\n            placeholder: \"Enter custom category\",\n            className: styles.customInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addSubcategory(categoryIndex),\n            className: styles.subcategoryButton,\n            children: \"Add Subcategory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCategory(categoryIndex),\n            className: styles.categoryButton,\n            children: \"Remove Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), category.subcategories.map((subcategory, subcategoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.subcategory,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.subcategoryRow,\n            children: [/*#__PURE__*/_jsxDEV(EditableDropdown, {\n              options: subcategoryOptions,\n              value: subcategory.selectedSubcategory,\n              onChange: value => handleSubcategoryChange(categoryIndex, subcategoryIndex, value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), subcategory.selectedSubcategory === 'Other' && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: subcategory.customSubcategory,\n              onChange: e => handleCustomSubcategoryChange(categoryIndex, subcategoryIndex, e.target.value),\n              placeholder: \"Enter custom subcategory\",\n              className: styles.customInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addDatapoint(categoryIndex, subcategoryIndex),\n              className: styles.datapointButton,\n              children: \"Add Datapoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeSubcategory(categoryIndex, subcategoryIndex),\n              className: styles.subcategoryButton,\n              children: \"Remove Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), subcategory.datapoints.map((datapoint, datapointIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.datapoint,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles['datapoint-row'],\n              children: [/*#__PURE__*/_jsxDEV(EditableDropdown, {\n                options: datapointOptions.map(dp => dp.name),\n                value: datapoint.selectedDatapoint,\n                onChange: value => handleDatapointChange(categoryIndex, subcategoryIndex, datapointIndex, value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this), datapoint.selectedDatapoint === 'Other' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: datapoint.customDatapoint,\n                onChange: e => handleCustomDatapointChange(categoryIndex, subcategoryIndex, datapointIndex, e.target.value),\n                placeholder: \"Enter custom datapoint\",\n                className: styles.customInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(EditableDropdown, {\n                options: dataTypeOptions,\n                value: datapoint.type,\n                onChange: value => handleDataTypeChange(categoryIndex, subcategoryIndex, datapointIndex, value),\n                className: styles['data-type-dropdown']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.mandatoryLabel,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: datapoint.isMandatory,\n                  onChange: () => handleMandatoryChange(categoryIndex, subcategoryIndex, datapointIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this), \"Mandatory\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeDatapoint(categoryIndex, subcategoryIndex, datapointIndex),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this)]\n          }, datapointIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this))]\n        }, subcategoryIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this))]\n      }, categoryIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: styles.save,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancel,\n      className: styles.cancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s(AnnotationBuilder, \"j40oE3l9Wl8DGif48hrdY5NLCxg=\");\n_c = AnnotationBuilder;\nexport default AnnotationBuilder;\nvar _c;\n$RefreshReg$(_c, \"AnnotationBuilder\");","map":{"version":3,"names":["React","useState","useRef","styles","EditableDropdown","jsxDEV","_jsxDEV","AnnotationBuilder","_s","categories","setCategories","fileInputRef","categoryOptions","subcategoryOptions","datapointOptions","name","type","listItems","dataTypeOptions","handleImportData","event","file","target","files","reader","FileReader","onload","e","importedData","JSON","parse","result","formattedCategories","map","category","selectedCategory","includes","trim","customCategory","subcategories","subcategory","selectedSubcategory","customSubcategory","datapoints","datapoint","selectedDatapoint","some","dp","customDatapoint","dataType","datatype","isMandatory","alert","error","value","readAsText","triggerFileInput","current","click","exportData","dataToExport","inputType","json","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","revokeObjectURL","handleCustomCategoryChange","categoryIndex","updatedCategories","handleCustomSubcategoryChange","subcategoryIndex","handleCustomDatapointChange","datapointIndex","addCategory","removeCategory","filter","_","index","addSubcategory","push","removeSubcategory","handleCategoryChange","handleSubcategoryChange","addDatapoint","removeDatapoint","handleDatapointChange","find","option","handleDataTypeChange","handleMandatoryChange","handleSave","formattedData","response","fetch","method","headers","body","ok","console","log","status","handleCancel","className","children","header","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","ref","style","display","categoryRow","options","placeholder","customInput","subcategoryButton","categoryButton","subcategoryRow","datapointButton","mandatoryLabel","checked","save","cancel","_c","$RefreshReg$"],"sources":["/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/builder/AnnotationBuilder.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styles from './AnnotationBuilder.module.css'; // Import the CSS module\nimport EditableDropdown from './EditableDropdown';\n\nfunction AnnotationBuilder() {\n  const [categories, setCategories] = useState([]);\n  const fileInputRef = useRef(null); // Reference for the hidden file input\n\n  const categoryOptions = [\n    'Pre-Admission', 'Early Labor', 'Active Labor', 'Transition', 'Pushing/Delivery', 'Expulsion of Placenta'\n  ];\n\n  const subcategoryOptions = [\n    'Patient interventions', 'FHR', 'Contractions', 'Blood work', 'I/O Interventions', 'Medication Administration',\n    'Pain Management', 'Membrane Status', 'Fetal Position', 'Epidural Placement', 'Vitals', 'Delivery time of infant',\n    'Time of delivery of Placenta', 'Estimated Blood Loss (EBL)', 'Blood type', 'Reason for Admission'\n  ];\n\n  const datapointOptions = [\n    { name: 'HR', type: 'Float' },\n    { name: 'B/p', type: 'String' },\n    { name: 'Respirations', type: 'String' },\n    { name: 'SpO2', type: 'Float' },\n    { name: 'Temp', type: 'Float' },\n    { name: 'Pulse Ox', type: 'String' },\n    { name: 'Dilation', type: 'Float' },\n    {\n      name: 'Monitor Mode', type: 'List', listItems: [\n        'External US', 'Internal Scalp Electrode', 'Auscultation', 'Fetoscope', 'Doppler', 'Telemetry'\n      ]\n    }\n  ];\n\n  const dataTypeOptions = ['Float', 'String', 'List'];\n\n\n  const handleImportData = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const importedData = JSON.parse(e.target.result);\n          if (importedData.categories) {\n            const formattedCategories = importedData.categories.map(category => {\n              const selectedCategory = categoryOptions.includes(category.name.trim()) ? category.name.trim() : 'Other';\n              const customCategory = selectedCategory === 'Other' ? category.name.trim() : '';\n\n              return {\n                selectedCategory,\n                customCategory,\n                subcategories: category.subcategories.map(subcategory => {\n                  const selectedSubcategory = subcategoryOptions.includes(subcategory.name.trim()) ? subcategory.name.trim() : 'Other';\n                  const customSubcategory = selectedSubcategory === 'Other' ? subcategory.name.trim() : '';\n\n                  return {\n                    selectedSubcategory,\n                    customSubcategory,\n                    datapoints: subcategory.datapoints.map(datapoint => {\n                      const selectedDatapoint = datapointOptions.some(dp => dp.name === datapoint.name.trim()) ? datapoint.name.trim() : 'Other';\n                      const customDatapoint = selectedDatapoint === 'Other' ? datapoint.name.trim() : '';\n                      const dataType = datapoint.datatype;\n                      const isMandatory = datapoint.isMandatory || false;\n                      const listItems = datapoint.listItems || [];\n\n                      return {\n                        selectedDatapoint,\n                        customDatapoint,\n                        type: dataType,\n                        isMandatory,\n                        listItems,\n                      };\n                    })\n                  };\n                })\n              };\n            });\n\n            setCategories(formattedCategories);\n          } else {\n            alert(\"Invalid format: Missing 'categories' field\");\n          }\n        } catch (error) {\n          alert(\"Error parsing JSON file\");\n        }\n\n        event.target.value = null;\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const triggerFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click(); // Programmatically click the file input\n    }\n  };\n\n  const exportData = () => {\n    // Format the current state data into the JSON structure\n    const dataToExport = {\n      categories: categories.map(category => ({\n        name: category.selectedCategory === 'Other' ? category.customCategory : category.selectedCategory,\n        subcategories: category.subcategories.map(subcategory => ({\n          name: subcategory.selectedSubcategory === 'Other' ? subcategory.customSubcategory : subcategory.selectedSubcategory,\n          datapoints: subcategory.datapoints.map(datapoint => ({\n            name: datapoint.selectedDatapoint === 'Other' ? datapoint.customDatapoint : datapoint.selectedDatapoint,\n            datatype: datapoint.type,\n            inputType: datapoint.inputType || 'Textbox', // Default to 'Textbox' if no inputType is specified\n            isMandatory: datapoint.isMandatory,\n            listItems: datapoint.listItems || []\n          }))\n        }))\n      }))\n    };\n\n    // Convert the data to a JSON string\n    const json = JSON.stringify(dataToExport, null, 2); // Pretty-print with 2-space indentation\n\n    // Create a blob from the JSON and a download link\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element to download the file\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'annotation_data.json'; // Default file name\n    link.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n\n  const handleCustomCategoryChange = (categoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].customCategory = value;\n    setCategories(updatedCategories);\n  };\n\n  const handleCustomSubcategoryChange = (categoryIndex, subcategoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].customSubcategory = value;\n    setCategories(updatedCategories);\n  };\n\n  const handleCustomDatapointChange = (categoryIndex, subcategoryIndex, datapointIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].customDatapoint = value;\n    setCategories(updatedCategories);\n  };\n\n  const addCategory = () => {\n    setCategories([...categories, { selectedCategory: '', subcategories: [] }]);\n  };\n\n  const removeCategory = (categoryIndex) => {\n    setCategories(categories.filter((_, index) => index !== categoryIndex));\n  };\n\n  const addSubcategory = (categoryIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories.push({ selectedSubcategory: '', datapoints: [] });\n    setCategories(updatedCategories);\n  };\n\n  const removeSubcategory = (categoryIndex, subcategoryIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories = updatedCategories[categoryIndex].subcategories.filter(\n      (_, index) => index !== subcategoryIndex\n    );\n    setCategories(updatedCategories);\n  };\n\n  const handleCategoryChange = (categoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].selectedCategory = value;\n    setCategories(updatedCategories);\n  };\n\n  const handleSubcategoryChange = (categoryIndex, subcategoryIndex, value) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].selectedSubcategory = value;\n    setCategories(updatedCategories);\n  };\n\n  const addDatapoint = (categoryIndex, subcategoryIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints.push({\n      selectedDatapoint: '', type: '', listItems: []\n    });\n    setCategories(updatedCategories);\n  };\n\n  const removeDatapoint = (categoryIndex, subcategoryIndex, datapointIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints = updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints.filter(\n      (_, index) => index !== datapointIndex\n    );\n    setCategories(updatedCategories);\n  };\n\n  const handleDatapointChange = (categoryIndex, subcategoryIndex, datapointIndex, event) => {\n    const updatedCategories = [...categories];\n    const selectedDatapoint = datapointOptions.find(option => option.name === event.target.value);\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex] = {\n      selectedDatapoint: selectedDatapoint.name,\n      type: selectedDatapoint.type,\n      listItems: selectedDatapoint.listItems || []\n    };\n    setCategories(updatedCategories);\n  };\n\n  const handleDataTypeChange = (categoryIndex, subcategoryIndex, datapointIndex, event) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].type = event.target.value;\n    setCategories(updatedCategories);\n  };\n\n\n  const handleMandatoryChange = (categoryIndex, subcategoryIndex, datapointIndex) => {\n    const updatedCategories = [...categories];\n    updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].isMandatory = !updatedCategories[categoryIndex].subcategories[subcategoryIndex].datapoints[datapointIndex].isMandatory;\n    setCategories(updatedCategories);\n  };\n\n  const handleSave = async () => {\n    const formattedData = categories.map(category => ({\n      name: category.selectedCategory === 'Other' ? category.customCategory : category.selectedCategory,\n      subcategories: category.subcategories.map(subcategory => ({\n        name: subcategory.selectedSubcategory === 'Other' ? subcategory.customSubcategory : subcategory.selectedSubcategory,\n        datapoints: subcategory.datapoints.map(datapoint => ({\n          name: datapoint.selectedDatapoint === 'Other' ? datapoint.customDatapoint : datapoint.selectedDatapoint,\n          datatype: datapoint.type,\n          inputType: datapoint.inputType || 'Textbox',\n          isMandatory: datapoint.isMandatory || false,\n          listItems: datapoint.listItems || []\n        }))\n      }))\n    }));\n\n    try {\n      const response = await fetch('PLACEHOLDER', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ categories: formattedData })\n      });\n\n      if (response.ok) {\n        alert(\"Data saved successfully!\");\n      } else {\n        console.log(\"status code is:\", response.status);\n        alert(\"Failed to save data. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n      alert(\"An error occurred while saving data.\");\n    }\n  };\n\n  // Handler for the Cancel button\n  const handleCancel = () => {\n    // Reset categories to an empty array\n    setCategories([]);\n  };\n\n\n  return (\n    <div className={styles['annotation-builder']}>\n      <div className={styles.header}>\n        <h1>Annotation Builder</h1>\n        <div className={styles['export-import-buttons']}>\n          <button className={styles['export-button']} onClick={exportData}>Export Data</button>\n          <button className={styles['import-button']} onClick={triggerFileInput}>Import Data</button>\n          <input\n            type=\"file\"\n            accept=\"application/json\"\n            onChange={handleImportData}\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n          />\n        </div>\n      </div>\n      <button onClick={addCategory} className={styles['add-category']}>Add Category</button>\n      <div>\n        {categories.map((category, categoryIndex) => (\n          <div key={categoryIndex} className={styles.category}>\n            <div className={styles.categoryRow}>\n              <EditableDropdown\n                options={categoryOptions}\n                value={category.selectedCategory}\n                onChange={(value) => handleCategoryChange(categoryIndex, value)}\n              />\n              {category.selectedCategory === 'Other' && (\n                <input\n                  type=\"text\"\n                  value={category.customCategory}\n                  onChange={(e) => handleCustomCategoryChange(categoryIndex, e.target.value)}\n                  placeholder=\"Enter custom category\"\n                  className={styles.customInput}\n                />\n              )}\n              <button onClick={() => addSubcategory(categoryIndex)} className={styles.subcategoryButton}>Add Subcategory</button>\n              <button onClick={() => removeCategory(categoryIndex)} className={styles.categoryButton}>Remove Category</button>\n            </div>\n\n            {category.subcategories.map((subcategory, subcategoryIndex) => (\n              <div key={subcategoryIndex} className={styles.subcategory}>\n                <div className={styles.subcategoryRow}>\n                  <EditableDropdown\n                    options={subcategoryOptions}\n                    value={subcategory.selectedSubcategory}\n                    onChange={(value) => handleSubcategoryChange(categoryIndex, subcategoryIndex, value)}\n                  />\n                  {subcategory.selectedSubcategory === 'Other' && (\n                    <input\n                      type=\"text\"\n                      value={subcategory.customSubcategory}\n                      onChange={(e) => handleCustomSubcategoryChange(categoryIndex, subcategoryIndex, e.target.value)}\n                      placeholder=\"Enter custom subcategory\"\n                      className={styles.customInput}\n                    />\n                  )}\n                  <button onClick={() => addDatapoint(categoryIndex, subcategoryIndex)} className={styles.datapointButton}>Add Datapoint</button>\n                  <button onClick={() => removeSubcategory(categoryIndex, subcategoryIndex)} className={styles.subcategoryButton}>Remove Subcategory</button>\n                </div>\n\n                {subcategory.datapoints.map((datapoint, datapointIndex) => (\n                  <div key={datapointIndex} className={styles.datapoint}>\n\n\n                    <div className={styles['datapoint-row']}>\n                      <EditableDropdown\n                        options={datapointOptions.map(dp => dp.name)}\n                        value={datapoint.selectedDatapoint}\n                        onChange={(value) => handleDatapointChange(categoryIndex, subcategoryIndex, datapointIndex, value)}\n                      />\n                      {datapoint.selectedDatapoint === 'Other' && (\n                        <input\n                          type=\"text\"\n                          value={datapoint.customDatapoint}\n                          onChange={(e) => handleCustomDatapointChange(categoryIndex, subcategoryIndex, datapointIndex, e.target.value)}\n                          placeholder=\"Enter custom datapoint\"\n                          className={styles.customInput}\n                        />\n                      )}\n                      <EditableDropdown\n                        options={dataTypeOptions}\n                        value={datapoint.type}\n                        onChange={(value) => handleDataTypeChange(categoryIndex, subcategoryIndex, datapointIndex, value)}\n                        className={styles['data-type-dropdown']}\n                      />\n                      <label className={styles.mandatoryLabel}>\n                        <input\n                          type=\"checkbox\"\n                          checked={datapoint.isMandatory}\n                          onChange={() => handleMandatoryChange(categoryIndex, subcategoryIndex, datapointIndex)}\n                        />\n                        Mandatory\n                      </label>\n                    </div>\n\n                    <button onClick={() => removeDatapoint(categoryIndex, subcategoryIndex, datapointIndex)}>Remove</button>\n                  </div>\n\n                ))}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <button onClick={handleSave} className={styles.save}>Save</button>\n      <button onClick={handleCancel} className={styles.cancel}>Cancel</button>\n    </div>\n  );\n}\n\nexport default AnnotationBuilder;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}