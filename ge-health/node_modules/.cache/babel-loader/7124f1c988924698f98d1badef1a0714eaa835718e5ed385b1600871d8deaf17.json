{"ast":null,"code":"var _jsxFileName = \"/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/UserInterface/UIStructure.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport HeaderAndPatientInfo from './HeaderAndPatientInfo';\nimport StageSelector from './StageSelector';\nimport TabNavigation from './TabNavigation';\nimport AlertDisplay from './AlertDisplay';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserInterface() {\n  _s();\n  const [patientData, setPatientData] = useState({});\n  const [alerts, setAlerts] = useState([]);\n  const location = useLocation();\n  const {\n    patientName\n  } = location.state || {};\n  console.log(patientName);\n\n  // Fetch patient data and monitor for alerts\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n  const fetchPatientData = async () => {\n    const response = await fetch('/api/patient-info'); // Example API endpoint\n    const data = await response.json();\n    setPatientData(data);\n    if (data.bp > 140) {\n      setAlerts([...alerts, 'High Blood Pressure']);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAndPatientInfo, {\n      patient: patientData,\n      patientName: patientName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDisplay, {\n      alerts: alerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(UserInterface, \"IVN/bKk9+SlSk4yGXD5QpjWksY4=\", false, function () {\n  return [useLocation];\n});\n_c = UserInterface;\nexport default UserInterface;\nvar _c;\n$RefreshReg$(_c, \"UserInterface\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","HeaderAndPatientInfo","StageSelector","TabNavigation","AlertDisplay","jsxDEV","_jsxDEV","UserInterface","_s","patientData","setPatientData","alerts","setAlerts","location","patientName","state","console","log","fetchPatientData","response","fetch","data","json","bp","className","children","patient","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/UserInterface/UIStructure.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport HeaderAndPatientInfo from './HeaderAndPatientInfo';\nimport StageSelector from './StageSelector';\nimport TabNavigation from './TabNavigation';\nimport AlertDisplay from './AlertDisplay';\nimport './style.css';\n\nfunction UserInterface() {\n  const [patientData, setPatientData] = useState({});\n  const [alerts, setAlerts] = useState([]);\n\n  const location = useLocation();\n  const { patientName } = location.state || {};\n  console.log(patientName)\n\n  // Fetch patient data and monitor for alerts\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n\n  const fetchPatientData = async () => {\n    const response = await fetch('/api/patient-info'); // Example API endpoint\n    const data = await response.json();\n    setPatientData(data);\n\n    if (data.bp > 140) {\n      setAlerts([...alerts, 'High Blood Pressure']);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <HeaderAndPatientInfo patient={patientData} patientName = {patientName}/>\n      <StageSelector />\n      <AlertDisplay alerts={alerts} />\n      <TabNavigation />\n    </div>\n  );\n}\n\nexport default UserInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEc;EAAY,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC;EAC5CC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;;EAExB;EACAf,SAAS,CAAC,MAAM;IACdmB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCZ,cAAc,CAACW,IAAI,CAAC;IAEpB,IAAIA,IAAI,CAACE,EAAE,GAAG,GAAG,EAAE;MACjBX,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,qBAAqB,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEL,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACL,oBAAoB;MAACyB,OAAO,EAAEjB,WAAY;MAACK,WAAW,EAAIA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzExB,OAAA,CAACJ,aAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBxB,OAAA,CAACF,YAAY;MAACO,MAAM,EAAEA;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCxB,OAAA,CAACH,aAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACtB,EAAA,CA/BQD,aAAa;EAAA,QAIHP,WAAW;AAAA;AAAA+B,EAAA,GAJrBxB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}