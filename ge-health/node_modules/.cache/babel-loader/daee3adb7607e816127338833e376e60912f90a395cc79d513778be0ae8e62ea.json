{"ast":null,"code":"var _jsxFileName = \"/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/builder/EditableDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditableDropdown({\n  options,\n  value,\n  onChange\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n  const handleSelectChange = e => {\n    if (e.target.value === 'Other') {\n      setIsEditing(true);\n    } else {\n      setInputValue(e.target.value);\n      onChange(e.target.value);\n      setIsEditing(false);\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n    onChange(e.target.value);\n  };\n  const handleBlur = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onBlur: handleBlur,\n      placeholder: \"Enter custom value\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n      value: inputValue,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Other\",\n        children: \"Other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(EditableDropdown, \"b8Jtei0b0qpyX6dtLqeFtzzZreg=\");\n_c = EditableDropdown;\nexport default EditableDropdown;\nvar _c;\n$RefreshReg$(_c, \"EditableDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditableDropdown","options","value","onChange","_s","isEditing","setIsEditing","inputValue","setInputValue","handleSelectChange","e","target","handleInputChange","handleBlur","children","type","onBlur","placeholder","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","disabled","map","option","index","_c","$RefreshReg$"],"sources":["/Users/dianakotsonis/GE-health-Capstone/ge-health/src/Components/builder/EditableDropdown.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction EditableDropdown({ options, value, onChange }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleSelectChange = (e) => {\n    if (e.target.value === 'Other') {\n      setIsEditing(true);\n    } else {\n      setInputValue(e.target.value);\n      onChange(e.target.value);\n      setIsEditing(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n    onChange(e.target.value);\n  };\n\n  const handleBlur = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div>\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleBlur}\n          placeholder=\"Enter custom value\"\n          autoFocus\n        />\n      ) : (\n        <select value={inputValue} onChange={handleSelectChange}>\n          <option value=\"\" disabled>Select an option</option>\n          {options.map((option, index) => (\n            <option key={index} value={option}>{option}</option>\n          ))}\n          <option value=\"Other\">Other</option>\n        </select>\n      )}\n    </div>\n  );\n}\n\nexport default EditableDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACK,KAAK,CAAC;EAEnD,MAAMO,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAIA,CAAC,CAACC,MAAM,CAACT,KAAK,KAAK,OAAO,EAAE;MAC9BI,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLE,aAAa,CAACE,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;MAC7BC,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;MACxBI,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAIF,CAAC,IAAK;IAC/BF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;IAC7BC,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAAe,QAAA,EACGT,SAAS,gBACRN,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEK,UAAW;MAClBJ,QAAQ,EAAES,iBAAkB;MAC5BI,MAAM,EAAEH,UAAW;MACnBI,WAAW,EAAC,oBAAoB;MAChCC,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,gBAEFvB,OAAA;MAAQG,KAAK,EAAEK,UAAW;MAACJ,QAAQ,EAAEM,kBAAmB;MAAAK,QAAA,gBACtDf,OAAA;QAAQG,KAAK,EAAC,EAAE;QAACqB,QAAQ;QAAAT,QAAA,EAAC;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClDrB,OAAO,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB3B,OAAA;QAAoBG,KAAK,EAAEuB,MAAO;QAAAX,QAAA,EAAEW;MAAM,GAA7BC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CACpD,CAAC,eACFvB,OAAA;QAAQG,KAAK,EAAC,OAAO;QAAAY,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA7CQJ,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AA+CzB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}