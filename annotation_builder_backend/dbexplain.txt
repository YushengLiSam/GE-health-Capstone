1. Annotation Builder Overview:
The Annotation Builder is a tool to configure categories, subcategories, and datapoints. These elements are hierarchical:
•	Categories (e.g., FHR Contractions)
•	Subcategories (e.g., Fetal Heart Rate, Uterine Activity)
•	Datapoints (e.g., FHR Baseline, Contractions Intensity)
Key properties:
•	Categories are top-level items and can be rearranged.
•	Subcategories are linked to categories.
•	Datapoints are linked to subcategories and can have different data types (e.g., numeric, list, boolean).

Pre-delivery (Category)
│
├── Contractions (Subcategory)
│   ├── Contraction frequency (Datapoint: Numeric)
│   └── Quality (Datapoint: Dropdown: Mild, Moderate, Strong)
│
└── Patient Care (Subcategory)
    └── Name (Datapoint: Textbox)

In Delivery (Category)
└── (No subcategories or datapoints added yet)

/annotation_builder_backend/
│
├── app.py              # Main entry point for the Flask app
├── routes.py           # API routes for Categories, Subcategories, Datapoints, and Operators
├── config.py           # Configuration for MySQL connection
├── models.py           # (Optional) Database models if using ORM
└── requirements.txt    # (Optional) Dependencies for the app (Flask, MySQL, etc.)

200 OK: The request has succeeded.
201 Created: The request has succeeded and a new resource has been created as a result. This status code is used when a new category, subcategory, or datapoint is successfully added.
400 Bad Request: The server cannot or will not process the request due to a client error (e.g., missing required fields or invalid data). This status code is returned when validation fails for adding a category, subcategory, or datapoint.
404 Not Found: The requested resource could not be found. This status code is used when subcategories or datapoints are not found for a given ID.
500 Internal Server Error: The server encountered an unexpected condition that prevented it from fulfilling the request. This status code is returned when there is a database error while adding a resource.
